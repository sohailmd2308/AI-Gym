import gnupg

gpg = gnupg.GPG()

# generate key
input_data = gpg.gen_key_input(
    name_email='harshavardhanreddy.velmula@gmail.com',
    passphrase='******',
)
key = gpg.gen_key(input_data)
print(key)

# create ascii-readable versions of pub / private keys
ascii_armored_public_keys = gpg.export_keys(key.fingerprint)
ascii_armored_private_keys = gpg.export_keys(
    keyids=key.fingerprint,
    secret=True,
    passphrase='*****',
)

# export
with open('mykeyfile.asc', 'w') as f:
    f.write(ascii_armored_public_keys)
    f.write(ascii_armored_private_keys)

# import
with open('mykeyfile.asc') as f:
    key_data = f.read()
import_result = gpg.import_keys(key_data)


# encrypt file
with open('plain.txt', 'rb') as f:
    status = gpg.encrypt_file(
        file=f,
        recipients=['harshavardhanreddy.velmula@gmail.com'],
        output='encrypted.txt.gpg',
    )

print(status.ok)
print(status.status)
print(status.stderr)
print('~'*50)

# decrypt file
with open('encrypted.txt.gpg', 'rb') as f:
    status = gpg.decrypt_file(
        file=f,
        passphrase='******',
        output='decrypted.txt',
    )

print(status.ok)
print(status.status)
print(status.stderr)
